[{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminAppLogin.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":8,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nclass AdminAppLogin extends Component {\n  render() {\n    return (\n      <Container>\n        <div class=\"formparentcontainer\">\n          <div class=\"formchildcontainer\">\n            <h1 id=\"h1-login\">Quiz - Admin Login</h1>\n            <hr />\n            <form>\n              <input type=\"text\" title=\"username\" =\" Username\" />\n              <br />\n              <input type=\"password\" title=\"username\" placeholder=\" Password\" />\n              <br />\n              <Link to=\"/Admin/AdminQuizList\">\n                <button type=\"submit\" class=\"btn-login\">\n                  Login\n                </button>\n              </Link>\n            </form>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default AdminAppLogin;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminDocEditor.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminDocEditor = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Documentation Editor</h1>\n        <p>\n          You can edit the documentation for %QUIZNAME here. Please use HTML\n          markup.\n        </p>\n        <input\n          className=\"documentation-editor\"\n          placeholder=\"\n        <h1> Documentation Heading <h1>\n        <p>\n          Placeholder text.\n        </p>\n        \"\n        ></input>\n        <Link to=\"/Admin/AdminQuizList\">\n          <button type=\"submit\" class=\"btn\">\n            Save\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default AdminDocEditor;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminEditUser.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminEditUser = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Edit User</h1>\n        <hr />\n        <p>You are editing %USERNAME.</p>\n        <form>\n          User Type:\n          <input type=\"text\" name=\"usertype\"></input>\n          <br />\n          <br />\n          First Name:\n          <input type=\"text\" name=\"firstname\"></input>\n          <br />\n          <br />\n          Last Name:\n          <input type=\"text\" name=\"lastname\"></input>\n          <br />\n          <br />\n          Region:\n          <input type=\"text\" name=\"region\"></input>\n          <br />\n          <br />\n          Phone Number:\n          <input type=\"text\" name=\"phonenumber\"></input>\n          <br />\n          <br />\n        </form>\n        <Link to=\"/Admin/AdminUserConfig\">\n          <button type=\"submit\" class=\"btn\">\n            Save\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default AdminEditUser;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminQuizList.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":8,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport \"./AdminQuizList.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminQuizList = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Manage Quizzes</h1>\n        <hr />\n        <p>\n          You are viewing a list of quizzes available to edit or add\n          documentation to.\n        </p>\n        <Link to=\"/Admin/AdminQuizMaker\">\n          <button type=\"submit\" class=\"btn\">\n            Add Quiz\n          </button>\n        </Link>\n        <br />\n        <Link to=\"/\">\n          <button type=\"submit\" class=\"btn\">\n            Export Data\n          </button>\n        </Link>\n\n        <table class=\"tftable\" border=\"1\">\n          <tr>\n            <th>Quiz ID</th>\n            <th>Quiz Name</th>\n            <th>Staff Type</th>\n            <th>Package</th>\n            <th>Language</th>\n            <th>Edit Quiz?</th>\n            <th>Edit Documentation?</th>\n            <th>Delete Quiz?</th>\n          </tr>\n          <tr>\n            <td>1</td>\n            <td>Zomato Gold - Introduction</td>\n            <td>Restauranters</td>\n            <td>Zomato Gold</td>\n            <td>English</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizMaker\"\n              >\n                Edit Quiz ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminDocEditor\"\n              >\n                Edit Documentation ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizList\"\n              >\n                Delete Quiz ►\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>1</td>\n            <td>Zomato Gold - Introduction</td>\n            <td>Restauranters</td>\n            <td>Zomato Gold</td>\n            <td>English</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizMaker\"\n              >\n                Edit Quiz ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminDocEditor\"\n              >\n                Edit Documentation ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizList\"\n              >\n                Delete Quiz ►\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>1</td>\n            <td>Zomato Gold - Introduction</td>\n            <td>Restauranters</td>\n            <td>Zomato Gold</td>\n            <td>English</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizMaker\"\n              >\n                Edit Quiz ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminDocEditor\"\n              >\n                Edit Documentation ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminQuizList\"\n              >\n                Delete Quiz ►\n              </a>\n            </td>\n          </tr>\n        </table>\n      </Container>\n    </div>\n  );\n};\nexport default AdminQuizList;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminQuizMaker.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":8,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport \"./AdminQuizMaker.css\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminQuizMaker = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Create/Edit Quiz</h1>\n        <hr />\n        <p>\n          You are creating a new quiz. MESSAGE FROM ED: This is just a\n          placeholder that needs developing.\n        </p>\n        <form>\n          Quiz Name:\n          <input type=\"text\" name=\"quizname\"></input>\n          <br /> <br />\n          Staff Type:\n          <input type=\"text\" name=\"quizname\"></input>\n          <br /> <br />\n          Package:\n          <input type=\"text\" name=\"quizname\"></input> <br /> <br />\n          Language:\n          <input type=\"text\" name=\"quizname\"></input>\n          <br />\n          <br />\n          <div class=\"Question-Edit\">\n            <div class=\"Question-Edit-Inner\">\n              <h2>Question 1</h2>\n              Question:\n              <input type=\"text\" name=\"quizname\"></input>\n              <br />\n              Answer 1:\n              <input type=\"text\" name=\"quizname\"></input>Correct Answer?\n              <input\n                type=\"checkbox\"\n                name=\"correctanswer\"\n                value=\"correctanswer\"\n              ></input>\n              Answer 2:\n              <input type=\"text\" name=\"quizname\"></input>\n              Correct Answer?\n              <input\n                type=\"checkbox\"\n                name=\"correctanswer\"\n                value=\"correctanswer\"\n              ></input>\n              Answer 3:\n              <input type=\"text\" name=\"quizname\"></input>\n              Correct Answer?\n              <input\n                type=\"checkbox\"\n                name=\"correctanswer\"\n                value=\"correctanswer\"\n              ></input>\n              Answer 4:\n              <input type=\"text\" name=\"quizname\"></input>\n              Correct Answer?\n              <input\n                type=\"checkbox\"\n                name=\"correctanswer\"\n                value=\"correctanswer\"\n              ></input>\n            </div>\n          </div>\n        </form>\n        <Link to=\"/Admin/AdminQuizList\">\n          <button type=\"submit\" class=\"btn\">\n            Save Quiz\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default AdminQuizMaker;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminQuizUpdate.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":5,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\n\nconst AdminQuizUpdate = () => {\n  return (\n    <div>\n      <p> You are updating an existing quiz</p>\n    </div>\n  );\n};\nexport default AdminQuizUpdate;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Admin/AdminUserConfig.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminUserConfig = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Manage Users</h1>\n        <p>You are viewing a list of users.</p>\n        <Link to=\"/Admin/AdminQuizMaker\">\n          <button type=\"submit\" class=\"btn\">\n            Add User\n          </button>\n        </Link>\n        <br />\n        <Link to=\"/\">\n          <button type=\"submit\" class=\"btn\">\n            Export Data\n          </button>\n        </Link>\n\n        <table class=\"tftable\" border=\"1\">\n          <tr>\n            <th>User Type</th>\n            <th>User ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Region</th>\n            <th>Phone Number</th>\n            <th>Edit User?</th>\n            <th>Delete User?</th>\n          </tr>\n          <tr>\n            <td>Restauranter</td>\n            <td>1</td>\n            <td>Britney</td>\n            <td>Spears</td>\n            <td>britney@hotmail.com</td>\n            <td>Lisbon</td>\n            <td>919192828</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminEditUser\"\n              >\n                Edit User ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Learners/Quiz/Quiz\"\n              >\n                Delete User ►\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>Restauranter</td>\n            <td>1</td>\n            <td>Britney</td>\n            <td>Spears</td>\n            <td>britney@hotmail.com</td>\n            <td>Lisbon</td>\n            <td>919192828</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminEditUser\"\n              >\n                Edit User ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Learners/Quiz/Quiz\"\n              >\n                Delete User ►\n              </a>\n            </td>\n          </tr>\n          <tr>\n            <td>Restauranter</td>\n            <td>1</td>\n            <td>Britney</td>\n            <td>Spears</td>\n            <td>britney@hotmail.com</td>\n            <td>Lisbon</td>\n            <td>919192828</td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Admin/AdminEditUser\"\n              >\n                Edit User ►\n              </a>\n            </td>\n            <td>\n              <a\n                class=\"view-quizzes-page-links-side-by-side\"\n                href=\"/Learners/Quiz/Quiz\"\n              >\n                Delete User ►\n              </a>\n            </td>\n          </tr>\n        </table>\n        <br />\n      </Container>\n    </div>\n  );\n};\nexport default AdminUserConfig;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/AdminNav.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":9,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport DropdownSelector from \"./DropdownSelector\";\n\nimport \"./AdminNav.css\";\n\nconst AdminNav = () => {\n  return (\n    <div>\n      {/* Example */}\n      <Navbar id=\"navbar-admin\" bg=\"black\" expand=\"lg\">\n        <Navbar.Brand href=\"/Learners/QuizList/QuizList\">\n          <img src=\"https://res.cloudinary.com/dpjc4trmq/image/upload/c_scale,w_130/v1578418844/i1fqkqecbismsg8o7w7b.png\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto admin-navlinks\">\n            <Nav.Link id=\"navbar-link-admin\" href=\"/Admin/AdminAppLogIn\">\n              <a class=\"white-link\">Login</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Admin/AdminQuizList\">\n              <a class=\"white-link\">Manage Quizzes</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Admin/AdminUserConfig\">\n              <a class=\"white-link\">Manage Users</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Admin/AdminAppLogIn\">\n              <a class=\"white-link\">Log Out</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Learners/Login/Login\">\n              <a class=\"white-link\">Learner Portal</a>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <DropdownSelector />\n      </Navbar>\n    </div>\n  );\n};\nexport default AdminNav;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/App.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":40,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\n// Admin portal imports\n\nimport AdminAppLogin from \"./Admin/AdminAppLogin\";\nimport AdminDocEditor from \"./Admin/AdminDocEditor\";\nimport AdminQuizList from \"./Admin/AdminQuizList\";\nimport AdminQuizMaker from \"./Admin/AdminQuizMaker\";\nimport AdminQuizUpdate from \"./Admin/AdminQuizUpdate\";\nimport AdminUserConfig from \"./Admin/AdminUserConfig\";\nimport AdminEditUser from \"./Admin/AdminEditUser\";\n\n// Nav imports\n\nimport LearnerNav from \"./LearnerNav.js\";\nimport AdminNav from \"./AdminNav.js\";\n\n// Learner portal imports\n\nimport ContactUs from \"./Learners/ContactUs/ContactUs\";\nimport Documentation from \"./Learners/Documentation/Documentation\";\nimport LogIn from \"./Learners/LogIn/LogIn\";\nimport ForgotPassword from \"./Learners/LogIn/ForgotPassword\";\nimport QuizList from \"./Learners/QuizList/QuizList\";\nimport Answer from \"./Learners/Quiz/Answer\";\nimport Quiz from \"./Learners/Quiz/Quiz\";\nimport Timer from \"./Learners/Quiz/Timer\";\nimport Question from \"./Learners/Quiz/Question\";\nimport Results from \"./Learners/Quiz/Results\";\nimport SignUp from \"./Learners/SignUp/SignUp\";\nimport FAQ from \"./Learners/FAQ/FAQ.js\";\n\nfunction App() {\n  return (\n    <>\n      {/* EW: Ideally, we want to do some sort of check of where the home directory leads. If user is logged in, go to QuizList pag (/Learners/QuizList/QuizList), if not, ask to login   */}\n      <Route\n        exact\n        path=\"/\"\n        render={() => <Redirect to=\"/Learners/LogIn/LogIn\"></Redirect>}\n      />\n\n      <Route\n        exact\n        path=\"/Admin/AdminAppLogin\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminAppLogin />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminDocEditor\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminDocEditor />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminQuizList\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminQuizList />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminQuizMaker\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminQuizMaker />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminUserConfig\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminUserConfig />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminEditUser\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminEditUser />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Admin/AdminQuizUpdate\"\n        render={() => (\n          <>\n            <AdminNav />\n            <AdminQuizUpdate />\n          </>\n        )}\n      />\n      {/* Learners Route */}\n      <Route\n        exact\n        path=\"/Learners/ContactUs/ContactUs\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <ContactUs />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/FAQ/FAQ\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <FAQ />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/Documentation/Documentation\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Documentation />\n          </>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/Learners/LogIn/LogIn\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <LogIn />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/LogIn/ForgotPassword\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <ForgotPassword />\n          </>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/Learners/QuizList/QuizList\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <QuizList />\n          </>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/Learners/Quiz/Timer\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Timer />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/Quiz/Answer\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Answer />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/Quiz/Question\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Question />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/Quiz/Quiz\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Quiz />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/Quiz/Results\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <Results />\n          </>\n        )}\n      />\n      <Route\n        exact\n        path=\"/Learners/SignUp/SignUp\"\n        render={() => (\n          <>\n            <LearnerNav />\n            <SignUp />\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default App;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/App.test.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":6,"column":32}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(<App />);\n  const linkElement = getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/DropdownSelector.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":12,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\n\nimport { Dropdown } from 'semantic-ui-react';\n\nconst languageOptions = [\n    { key: 'English', text: 'English', value: 'English' },\n    { key: 'Portuguese', text: 'Portuguese', value: 'Portuguese' },\n\n  ]\n  \n  const DropdownSelector = () => (\n    <Dropdown\n      button\n      className='icon'\n      floating\n      labeled\n      icon='world'\n      options={languageOptions}\n      text='English'\n    />\n    \n  )\n\n  \n\n  export default DropdownSelector"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/LearnerNav.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":9,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport DropdownSelector from \"./DropdownSelector\";\n\nimport \"./LearnerNav.css\";\n\nconst LearnerNav = () => {\n  return (\n    <div>\n      {/* Example */}\n      <Navbar class=\"learner-navbar\" bg=\"tyrolean\" expand=\"lg\">\n        <Navbar.Brand href=\"/Learners/QuizList/QuizList\">\n          <img src=\"https://res.cloudinary.com/dpjc4trmq/image/upload/c_scale,w_130/v1578418844/i1fqkqecbismsg8o7w7b.png\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n        <Navbar.Collapse id=\"learner-basic-navbar-nav\">\n          <Nav className=\"mr-auto learner-navlinks\">\n            <Nav.Link href=\"/Learners/SignUp/SignUp\">\n              <a class=\"grey-link\">Sign Up</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Learners/LogIn/LogIn\">\n              <a class=\"grey-link\">Login</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Learners/QuizList/QuizList\">\n              <a class=\"grey-link\">All Quizzes</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Learners/FAQ/FAQ\">\n              <a class=\"grey-link\">FAQ</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Learners/ContactUs/ContactUs\">\n              <a class=\"grey-link\">Contact</a>\n            </Nav.Link>\n            <Nav.Link href=\"/Admin/AdminAppLogin\">\n              <a class=\"grey-link\">Admin Portal</a>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <DropdownSelector />\n      </Navbar>\n\n      {/* <ul>\n        <u>Learners</u>\n        <li>\n          <a href=\"/Learners/LogIn/LogIn\">Login </a>\n        </li>\n        <li>\n          <a href=\"/Learners/SignUp/SignUp\">Sign Up </a>\n        </li>\n        <li>\n          <a href=\"/Learners/QuizList/QuizList\">Quiz List </a>\n        </li>\n        <li>\n          <a href=\"/Learners/quiz/Question\">Question </a>\n        </li>{\" \"}\n        <li>\n          <a href=\"/Learners/quiz/Answer\">Answer </a>\n        </li>\n        <li>\n          <a href=\"/Learners/quiz/quiz\">Quiz </a>\n        </li>\n        <li>\n          <a href=\"/Learners/quiz/Results\">Results </a>\n        </li>\n        <li>\n          <a href=\"/Learners/ContactUs/ContactUs\">Contact Us </a>\n        </li>\n        <li>\n          <a href=\"/Learners/FAQ/FAQ\"> FAQ </a>\n        </li>\n      </ul> */}\n    </div>\n  );\n};\nexport default LearnerNav;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/ContactUs/ContactUs.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst ContactUs = () => {\n  return (\n    <div>\n      <Container>\n        <div class=\"formparentcontainer\">\n          <div class=\"formchildcontainer\">\n            <h1>Contact Us</h1>\n            <hr />\n            <h2>We would love to hear from you</h2>\n            <form>\n              <input type=\"text\" title=\"name\" placeholder=\"Name*\" />\n              <br />\n              <input type=\"text\" title=\"email\" placeholder=\"Email*\" />\n              <br />\n              <input\n                type=\"text\"\n                title=\"name\"\n                placeholder=\"Phone number (optional)\"\n              />\n              <br />\n              <input type=\"text\" title=\"email\" placeholder=\"Message*\" />\n              <br />\n              <Link to=\"/Learners/QuizList/QuizList\">\n                <button type=\"submit\" class=\"btn-login\">\n                  Send Message\n                </button>\n              </Link>\n              <br />\n            </form>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\nexport default ContactUs;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Documentation/Documentation.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst Documentation = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Documentation</h1>\n        <hr></hr>\n        <h2>Heading</h2>\n        <p>\n          Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n          kjbbaj,snjsns jn kjn kj\n        </p>\n        <h2>Heading</h2>\n        <p>\n          Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n          kjbbaj,snjsns jn kjn kj\n        </p>\n        <h2>Heading</h2>\n        <p>\n          Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n          kjbbaj,snjsns jn kjn kj\n        </p>\n        <Link to=\"/Learners/QuizList/QuizList\">\n          <button type=\"submit\" class=\"btn\">\n            Home\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default Documentation;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/FAQ/FAQ.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst FAQ = () => {\n  return (\n    <div>\n      <Container>\n        <div>\n          <h1>FAQ</h1>\n          <hr></hr>\n          <h2>Is this a question?</h2>\n          <p>\n            Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n            kjbbaj,snjsns jn kjn kj\n          </p>\n          <h2>Is this a question?</h2>\n          <p>\n            Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n            kjbbaj,snjsns jn kjn kj\n          </p>\n          <h2>Is this a question?</h2>\n          <p>\n            Blahd ijwb djwnblj nwdnwkjdn kjdnkjw ndjw s, akjbkjndksma.ksn\n            kjbbaj,snjsns jn kjn kj\n          </p>\n          <Link to=\"/Learners/QuizList/QuizList\">\n            <button type=\"submit\" class=\"btn\">\n              Home\n            </button>\n          </Link>\n        </div>\n      </Container>\n    </div>\n  );\n};\nexport default FAQ;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/LogIn/ForgotPassword.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst ForgotPassword = () => {\n  return (\n    <div>\n      <Container>\n        <div class=\"formparentcontainer\">\n          <div class=\"formchildcontainer\">\n            <h1 id=\"h1-login\">Forgot Password?</h1>\n            <hr />\n            <p>\n              Forgotten your password? Enter your email address here to retrieve\n              it. (Note to team: We haven't agreed this functionality, we don't\n              have to include this page)\n            </p>\n            <form>\n              <input\n                type=\"text\"\n                title=\"email\"\n                placeholder=\" Enter your email address\"\n              />\n              <br />\n\n              <Link to=\"/Learners/LogIn/LogIn\">\n                <button type=\"submit\" class=\"btn-login\">\n                  Retrieve Password\n                </button>\n              </Link>\n            </form>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\nexport default ForgotPassword;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/LogIn/LogIn.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst LogIn = () => {\n  return (\n    <div>\n      <Container>\n        <div class=\"formparentcontainer\">\n          <div class=\"formchildcontainer\">\n            <h1 id=\"h1-login\">Quiz</h1>\n            <hr />\n            <form>\n              <input type=\"text\" title=\"username\" placeholder=\" Username\" />\n              <br />\n              <input type=\"password\" title=\"username\" placeholder=\" Password\" />\n              <br />\n              <Link to=\"/Learners/QuizList/QuizList\">\n                <button type=\"submit\" class=\"btn-login\">\n                  Login\n                </button>\n              </Link>\n            </form>\n          </div>\n          <div class=\"forgotpassword-signup\">\n            <Link to=\"/Learners/LogIn/ForgotPassword\">\n              <a id=\"forgotpassword\" href=\"/Learners/LogIn/ForgotPassword\">\n                Forgot password? <br />\n              </a>\n            </Link>\n            Don't have an account?{\" \"}\n            <Link to=\"/Learners/SignUp/SignUp\">\n              <a id=\"signup\" href=\"\">\n                Sign-Up\n              </a>\n            </Link>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\nexport default LogIn;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Quiz/Answer.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token =","line":28,"column":13}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from 'react';\nimport { Container, Row, Col}  from 'react-bootstrap';\nimport { MDBInput } from \"mdbreact\";\nimport Timer from './Timer';\nimport './Quiz.css';\n\n\n\n  class Answer extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        radio: null,\n        rightAns: '',\n        an1: 'Answer by default1',\n        an2: 'Answer by default2',\n        an3: 'Answer by default3',\n        an4: 'Answer by default4',\n        currentQuestion: 0,\n        totalQuestions: 10,\n        question: 'by default: How many complimentary dishes do Zomato Gold customers receive?',\n        timer: 'this : timer'\n      \n      }\n\n    }\n    \n    onClick = (nr) => () => {\n      this.setState({\n        radio: nr\n      });\n    }\n\n    render() {\n      return (\n       <>\n        <Container>\n           <h1>Zomato Gold Quiz</h1>\n                <hr />\n           {/* Counter */}\n          \n            <span className='counter'> Question {this.state.currentQuestion} from  {this.state.totalQuestions}</span>\n           \n           {/* Question  */}\n            <p className='questionStyle'>{this.state.question}</p>\n\n            <MDBInput gap onClick={this.onClick(1)} checked={this.state.radio===1 ? true : false} label={this.state.an1} type=\"radio\"\n              id=\"radio1\" />\n            <MDBInput gap onClick={this.onClick(2)} checked={this.state.radio===2 ? true : false} label={this.state.an2} type=\"radio\"\n              id=\"radio2\" />\n            <MDBInput gap onClick={this.onClick(3)} checked={this.state.radio===3 ? true : false} label={this.state.an3} type=\"radio\"\n              id=\"radio3\" />\n            <MDBInput gap onClick={this.onClick(4)} checked={this.state.radio===4 ? true : false} label={this.state.an4} type=\"radio\"\n              id=\"radio4\" />\n\n            {/* Timer */}\n            <Timer  ms={600000} /> \n            {/* Bottons */}\n            <Row>\n              <Col md='12'>\n                <div className=\"d-flex justify-content-end\">\n                  <button type=\"submit\" class=\"btn\" disabled={!this.state.radio}>\n                    Next\n                  </button>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </>\n        );\n      }\n    }\n\nexport default Answer;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Quiz/Question.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":16,"column":7}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from 'react';\nimport { Container, Row}  from 'react-bootstrap';\n\n\n\nclass Question extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    question: 'by default: How many complimentary dishes do Zomato Gold customers receive?'\n  }\n}  \n\nrender() {\n  return (\n      <>\n      {/* Counter */}\n        <p className='questionStyle'>{this.state.question}</p>\n      </>\n    );\n  }\n}\n\nexport default Question;"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Quiz/Quiz.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst Quiz = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Quiz</h1>\n        <hr></hr>\n        <Link to=\"/Learners/Quiz/Results\">\n          <button type=\"submit\" class=\"btn\">\n            View Results\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default Quiz;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Quiz/Results.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst Results = () => {\n  return (\n    <div>\n      <Container>\n        <h1>Results</h1>\n        <hr></hr>\n        <p>You got 50% (5/10)</p>\n        <Link to=\"/Learners/Documentation/Documentation\">\n          <button type=\"submit\" class=\"btn\">\n            Documentation\n          </button>\n        </Link>\n        <br />\n        <Link to=\"/Learners/QuizList/QuizList\">\n          <button type=\"submit\" class=\"btn\">\n            Home\n          </button>\n        </Link>\n      </Container>\n    </div>\n  );\n};\nexport default Results;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/Quiz/Timer.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":34,"column":13}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from 'react'\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ms: props.ms\n        }\n    }\n    componentWillMount() {\n        this.interval = setInterval( () => {\n            if ((this.state.ms) <= 0) {\n                clearInterval(this.interval);\n                this.forceUpdate();\n                return;\n            }\n            this.setState({ms: this.state.ms - 1000});\n        }, 1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    format() {\n        const { ms } = this.state;\n        let seconds = Math.floor(ms / 1000);\n        let minutes = Math.floor(seconds / 60);\n\n        minutes = minutes < 1 ? '00' : minutes < 10 ? `0${minutes}` : minutes;\n        seconds = seconds < 1 ? '00' : seconds < 10 ? `0${seconds}` : seconds;\n        return `${minutes}:${seconds}`;\n    }\n    render() {\n        return (\n            <div>{this.format(this.state.ms)}</div>\n        )\n    }\n}\n\nexport default Timer"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/QuizList/QuizList.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":7,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\n\nconst QuizList = () => {\n  return (\n    <>\n      <div>\n        <Container>\n          <h1>Available Quizzes</h1>\n          <hr />\n          <h2>Zomato Gold</h2>\n          <p>Short description about the quiz and why you should do it.</p>\n          <Link to=\"/Learners/Quiz/Answer\">\n            <a\n              class=\"view-quizzes-page-links-side-by-side\"\n              href=\"/Learners/Quiz/Answer\"\n            >\n              Take Quiz ►\n            </a>\n          </Link>\n\n          <Link to=\"/Learners/Documentation/Documentation\">\n            <a\n              class=\"cranberry-link\"\n              href=\"/Learners/Documentation/Documentation\"\n            >\n              Documentation ►\n            </a>\n          </Link>\n        </Container>\n      </div>\n    </>\n  );\n};\nexport default QuizList;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/SignUp/RegionDropDown.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":5,"column":3}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst RegionDropDown = props => (\n  <Dropdown\n    placeholder={props.placeholder}\n    fluid\n    selection\n    options={props.selectOptions}\n  />\n);\n\nexport default RegionDropDown;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/Learners/SignUp/SignUp.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":44,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport RegionDropDown from \"./RegionDropDown.js\";\n\nconst Regions = [\n  {\n    key: \"Greater Lisbon\",\n    text: \"Greater Lisbon\",\n    value: \"Greater Lisbon\"\n  },\n  {\n    key: \"Porto\",\n    text: \"Porto\",\n    value: \"Porto\"\n  },\n  {\n    key: \"Algarve\",\n    text: \"Algarve\",\n    value: \"Algarve\"\n  }\n];\n\nconst UserType = [\n  {\n    key: \"Restauranter\",\n    text: \"Restauranter\",\n    value: \"Restauranter\"\n  },\n  {\n    key: \"Restauraunt Employee\",\n    text: \"Restauraunt Employee\",\n    value: \"Restauraunt Employee\"\n  },\n  {\n    key: \"Zomato HQ Employee\",\n    text: \"Zomato HQ Employee\",\n    value: \"Zomato HQ Employee\"\n  }\n];\n\nconst SignUp = () => {\n  return (\n    <div>\n      <Container>\n        <div class=\"formparentcontainer\">\n          <h1 id=\"h1-login\"> Sign-Up </h1>\n          <hr />\n          <form class=\"signup-form\">\n            <h5>Personal Details:</h5>\n            <input type=\"text\" title=\"firstname\" placeholder=\" First Name*\" />\n            <input type=\"text\" title=\"lastname\" placeholder=\" Last Name*\" />\n            <input type=\"text\" title=\"email\" placeholder=\" Email*\" />\n            <br /> <br />\n            <h5>Location:</h5>\n            <RegionDropDown selectOptions={Regions} placeholder=\"Your region\" />\n            <br />\n            <h5>Zomato Information:</h5>\n            <RegionDropDown\n              selectOptions={UserType}\n              placeholder=\"Are you a... *\"\n            />\n            <input\n              type=\"text\"\n              title=\"email\"\n              placeholder=\" Restaurant (If applicable)\"\n            />\n            <br /> <br />\n            <h5>Password:</h5>\n            <input type=\"password\" title=\"password\" placeholder=\" Password*\" />\n            <br />\n            <input\n              type=\"password\"\n              title=\"password\"\n              placeholder=\" Confirm Password*\"\n            />\n            <br />\n            <Link to=\"/Learners/QuizList/QuizList\">\n              <button type=\"submit\" class=\"btn-login\">\n                Sign-Up\n              </button>\n            </Link>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\nexport default SignUp;\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/index.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":12,"column":5}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/serviceWorker.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":14,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":14,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":24,"column":67,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":76},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":26,"column":55,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":61},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":27,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":36},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":43,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":43,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":58,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":58,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":68,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":68,"endColumn":26},{"ruleId":"no-undef","severity":2,"message":"'fetch' is not defined.","line":103,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":103,"endColumn":8},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":114,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":114,"endColumn":18},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":116,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":116,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":132,"column":26,"nodeType":"Identifier","messageId":"undef","endLine":132,"endColumn":35},{"ruleId":"no-undef","severity":2,"message":"'navigator' is not defined.","line":133,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":133,"endColumn":14}],"errorCount":15,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"},{"filePath":"/home/edward/Desktop/ZomatoProject/Zomato-React.js/src/setupTests.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0}]